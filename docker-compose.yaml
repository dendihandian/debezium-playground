version: '3.9'

volumes:
  mysql_volume:

services:

  zookeeper:
    build:
      context: ./docker/zookeeper
      dockerfile: ./Dockerfile
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888

  kafka:
    build:
      context: ./docker/kafka
      dockerfile: ./Dockerfile
    ports:
      - 9092:9092
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
    links:
      - zookeeper
    depends_on:
      - zookeeper

  connect:
    build:
      context: ./docker/connect
      dockerfile: ./Dockerfile
    ports:
     - 8083:8083
    links:
     - kafka
     - mysql
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses

  mysql:
    build:
      context: ./docker/mysql
      dockerfile: ./Dockerfile
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=debezium_playground
    volumes:
      - mysql_volume:/var/lib/mysql

  python:
    build: 
      context: ./docker/python
      dockerfile: ./Dockerfile
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./docker/python/src:/python/src

  adminer:
    build:
      context: './docker/adminer'
      dockerfile: ./Dockerfile
    ports:
      - 9000:9000
    environment:
      - ADMINER_DEFAULT_DB_DRIVER=mysql
      - ADMINER_DEFAULT_DB_HOST=mysql
      - ADMINER_DEFAULT_DB_USER=${MYSQL_USER}
      - ADMINER_DEFAULT_DB_NAME=debezium_playground
    depends_on:
      - mysql